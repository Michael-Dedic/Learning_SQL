--Previous code that uses a natural join that matches students names and their applications majors.

Select distinct name, major
from Student, Application
where Student.ID = Application.Student_ID;



--This code does the same as above except it uses the inner join(cross product) and then checks the condition.
Select distinct name, major
from Student inner join Application
on Student.ID = Application.Student_ID;


--This query is similar to previous examples but now using the inner join
Select distinct name,GPA
from Student inner join Application
on Student.ID = Application.Student_ID
where SizeHS < 10000 and major = 'Computer Science';


--You can write the above query with an and statement instead of the where clause
Select distinct name,GPA
from Student inner join Application
on Student.ID = Application.Student_ID
and SizeHS < 10000 and major = 'Computer Science';


--Another previously written query using the inner join
select distinct ID, Student.name, College_Name, GPA,major, enrollment
from Student join College join Application
on Application.Student_ID = Student.ID and Application.College_Name = College.name order by GPA desc, enrollment;


--Similarly, another way to write the above using only 2 joins at a time.
select distinct ID, Student.name, College_Name, GPA,major, enrollment
from (Student join  Application on Application.Student_ID = Student.ID) join College on Application.College_Name = College.name order by GPA desc, enrollment;

--This code writes a previous query using the natural join
Select distinct name, major
from Student natural join Application;


--Does a previous query using a natural join
Select distinct name,GPA
from Student natural join Application
where SizeHS < 10000 and major = 'Computer Science';



--Does a previous query using a natural join but with the using feature to perform the natural join. This is better software engineering practice.
Select distinct name,GPA
from Student join Application using (ID)
where SizeHS < 10000 and major = 'Computer Science';




